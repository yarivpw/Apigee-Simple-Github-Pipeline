
name: Apigee CI with Maven

on: push
  
env:
  API_VERSION: googleapi 
  # or 
  #API_VERSION: apigeeapi

  # Default Target Apigee Organization et environment (can be also be dynamically defined in [Set Variables *] steps)
  DEFAULT_APIGEE_ORG: bap-emea-apigee-3
  DEFAULT_APIGEE_ENV: demo-env
  TEST_HOST: 35-201-121-246.nip.io

  # Retrieve Apigee UserID and password from repository settings (secrets)
  APIGEE_CREDS_USR: ${{ secrets.APIGEE_CREDS_USR }}
  APIGEE_CREDS_PSW: ${{ secrets.APIGEE_CREDS_PSW }}

  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  # These variables will be dynamically defined in [Set Variables *] steps
  AUTHOR_EMAIL: ''
  APIGEE_ORG: ''
  APIGEE_ENV: ''
  APIGEE_DEPLOYMENT_SUFFIX: ''
  

jobs:
  Apigee-Deploy:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

  # Set Variables depending on branch
      - name: Set Variables for [Main] branch
        if: github.ref == 'refs/heads/main'
        run: |
          echo "AUTHOR_EMAIL=$(echo $GITHUB_ACTOR)" >> $GITHUB_ENV
          echo "APIGEE_ORG=$(echo $DEFAULT_APIGEE_ORG)" >> $GITHUB_ENV
          echo "APIGEE_ENV=$(echo $DEFAULT_APIGEE_ENV)" >> $GITHUB_ENV

      - name: Set Variables for [Prod] branch
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "AUTHOR_EMAIL=$(echo $GITHUB_ACTOR)" >> $GITHUB_ENV
          echo "APIGEE_ORG=$(echo $DEFAULT_APIGEE_ORG)" >> $GITHUB_ENV
          echo "APIGEE_ENV=prod)" >> $GITHUB_ENV
  
      - name: Set Variables for branch not [Main], not [Prod]
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/prod'
        run: |
          echo "APIGEE_DEPLOYMENT_SUFFIX=$(echo $GITHUB_REF | sed 's/.*\///')" >> $GITHUB_ENV
          echo "AUTHOR_EMAIL=$(echo $GITHUB_ACTOR)" >> $GITHUB_ENV
          echo "APIGEE_ORG=$(echo $DEFAULT_APIGEE_ORG)" >> $GITHUB_ENV
          echo "APIGEE_ENV=$(echo $DEFAULT_APIGEE_ENV)" >> $GITHUB_ENV


  # Create Dependencies (npm) Cache 
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` 
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-


  # Install dependencies (npm)
      - name: Install Dependencies
        run: npm install --silent --no-fund

  # Validate Specification file (OAS, Swagger) using Stoplight Spectral
  # + upload artifact (spectral-report.html)
      - name: spectral
        run: ./node_modules/.bin/spectral lint -r ./test/spectral/.spectral.yaml -f html -o spectral-report.html ./specs/airport-1.0.0.yaml  || true  # catch all errors for demo purpose 

      - name: Archive Spectral results
        uses: actions/upload-artifact@v4
        with:
          name: spectral-report
          path:  ./spectral-report.html
          retention-days: 5


  # Run apigeeLint test + upload artifact (apigeelint-out.html)
      - name: apigeelint
        run: ./node_modules/apigeelint/cli.js -s ./apiproxy -f html.js -e PO013,PO025 > ./apigeelint-out.html

      - name: Archive Apigeelint results
        uses: actions/upload-artifact@v4
        with:
          name: apigeelint-report
          path: ./apigeelint-out.html
          retention-days: 5


  # Run eslint test + upload artifact (eslint-out.html)
      - name: eslint
        run : ./node_modules/eslint/bin/eslint.js -c ./.eslintrc-jsc.yml --format html ./apiproxy/resources/jsc > ./eslint-out.html

      - name: Archive esLint results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: ./eslint-out.html
          retention-days: 5


  # Run JS Mocha test + upload artifact (coverage/index.html)
      - name: mocha
        run: ./node_modules/nyc/bin/nyc.js --reporter=html --reporter=text ./node_modules/mocha/bin/_mocha ./test/unit
  
      - name: Archive Mocha results
        uses: actions/upload-artifact@v4
        with:
          name: mocha-report
          path:  ./coverage/index.html
          retention-days: 5


  # Setup Maven & Maven Cache
      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' 
          java-version: 8

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2   


  # Generate SA key file from secret variable
      - name: Generate SA key file
        if: env.API_VERSION == 'googleapi'
        run: | 
          echo $GCP_SERVICE_ACCOUNT > sa.json



  # Deploy Apigee Config (Apigee [Config] Maven plugin)
      - name: mvn deploy cfg edge
        if: env.API_VERSION == 'apigeeapi'
        run:  |
          sed -i "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          mvn install -q -Papigeeapi -Dapigee.org=$APIGEE_ORG -Denv=$APIGEE_ENV -Dapigee.username=$APIGEE_CREDS_USR -Dapigee.password=$APIGEE_CREDS_PSW -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update

      - name: mvn deploy config xhybrid
        if: env.API_VERSION == 'googleapi'
        run:  |
          sed -i "s/target_apigee_env/$APIGEE_ENV/g" ./EdgeConfig/edge.json
          cat sa.json
          mvn install -q -Pgoogleapi -Dapigee.org=$APIGEE_ORG -Denv=$APIGEE_ENV -Dsa=sa.json -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update


  # Package & Deploy Apigee proxy (Apigee [Deploy] Maven plugin)
      - name: mvn package
        run: mvn process-resources -P$API_VERSION -Dcommit=$GIT_COMMIT -Dauthor=$AUTHOR_EMAIL -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX

      - name: mvn config
        run: mvn apigee-enterprise:configure -q -P$API_VERSION -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV  -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX 

      - name: mvn deploy proxy edge
        if: env.API_VERSION == 'apigeeapi'
        run: mvn apigee-enterprise:deploy -q -Papigeeapi -Dorg=$APIGEE_ORG -Denv=$APIGEE_ENV -Dpassword=$APIGEE_CREDS_PSW -Dusername=$APIGEE_CREDS_USR -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX  

      - name: mvn deploy proxy xhybrid
        if: env.API_VERSION == 'googleapi'
        run: mvn apigee-enterprise:deploy -q -Pgoogleapi -Denv=$APIGEE_ENV -Dsa=sa.json -Dorg=$APIGEE_ORG -Ddeployment.suffix=$APIGEE_DEPLOYMENT_SUFFIX  



  # Run Integration testing (Apickli) + upload artifact (cucumber_report.html)
      - name: apickli
        run: |
          # update apickli config file (init.js) with API hostname and base path
          export API_BASEPATH="/airports-cicd/v1"
          sed -i "s@api_basepath@$API_BASEPATH@g" ./test/integration/features/support/init.js
          sed -i "s@organization_hostname@$TEST_HOST@g" ./test/integration/features/support/init.js

          # NODE_TLS_REJECT_UNAUTHORIZED required to support self signed certificate
          # export NODE_TLS_REJECT_UNAUTHORIZED=0

          node ./node_modules/.bin/cucumber-js  ./test/$PROXY_NAME/integration --format json:./report.json
          node ./test/integration/index.js

      - name: Archive Apickli results
        uses: actions/upload-artifact@v4
        with:
          name: apickli-report
          path: ./cucumber_report.html
          retention-days: 5

